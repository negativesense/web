{"ast":null,"code":"import _slicedToArray from \"/home/gzcharleszhang/projects/personal-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gzcharleszhang/projects/personal-site/src/countdown.jsx\";\nimport anime from \"animejs\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nconst CountdownContainer = styled.div`\n  text-align: center;\n  color: ${props => props.theme.primary};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  -moz-transform: translateX(-50%) translateY(-50%);\n  -webkit-transform: translateX(-50%) translateY(-50%);\n  transform: translateX(-50%) translateY(-50%);\n  font-size: xx-large;\n`;\nconst BigPoop = styled.div`\n  position: absolute;\n  font-size: 100px;\n`;\nconst Poop = () => {\n  useEffect(() => {\n    anime.timeline({\n      easing: \"easeInSine\"\n    }).add({\n      targets: \".name\",\n      translateY: [\"-300px\", 0],\n      opacity: [0, 1],\n      duration: 500\n    }).add({\n      targets: \".intro\",\n      translateY: [\"300px\", 0],\n      opacity: [0, 1],\n      duration: 500\n    }).add({\n      targets: \".headshot\",\n      translateX: [\"300px\", 0],\n      opacity: [0, 1],\n      duration: 500\n    });\n  }, []);\n  return React.createElement(BigPoop, {\n    className: \"poop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"\\uD83D\\uDCA9\");\n};\nconst Countdown = () => {\n  const targetTime = moment('20231204 07:00', 'YYYYMMDD hh:mm');\n  const _useState = useState(moment()),\n    _useState2 = _slicedToArray(_useState, 2),\n    currTime = _useState2[0],\n    setCurrTime = _useState2[1];\n  useEffect(() => {\n    const interval = setInterval(() => setCurrTime(moment(), 1000));\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  useEffect(() => {\n    anime.timeline({\n      loop: true\n    }).add({\n      targets: \".poop\",\n      scale: [1, 3],\n      duration: 500,\n      easing: \"easeOutElastic(1, .8)\"\n    }).add({\n      targets: \".poop\",\n      scale: [3, 1],\n      duration: 500,\n      easing: \"easeOutElastic(1, .8)\"\n    });\n  }, []);\n  let diff = moment.duration(targetTime.diff(currTime));\n  const days = Math.floor(diff.asDays());\n  diff = diff.subtract(days, 'd');\n  const hours = Math.floor(diff.asHours());\n  diff = diff.subtract(hours, 'h');\n  const minutes = Math.floor(diff.asMinutes());\n  diff = diff.subtract(minutes, 'm');\n  const seconds = Math.floor(diff.asSeconds());\n  return React.createElement(React.Fragment, null, React.createElement(Poop, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(CountdownContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Time left until I see my schmoop \", React.createElement(\"span\", {\n    className: \"poop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"\\uD83D\\uDCA9\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, days, \" days \", hours, \" hours \", minutes, \" minutes \", seconds, \" seconds\")));\n};\nexport default Countdown;","map":{"version":3,"names":["anime","moment","React","useEffect","useState","styled","CountdownContainer","div","props","theme","primary","BigPoop","Poop","timeline","easing","add","targets","translateY","opacity","duration","translateX","createElement","className","__source","fileName","_jsxFileName","lineNumber","__self","Countdown","targetTime","_useState","_useState2","_slicedToArray","currTime","setCurrTime","interval","setInterval","clearInterval","loop","scale","diff","days","Math","floor","asDays","subtract","hours","asHours","minutes","asMinutes","seconds","asSeconds","Fragment"],"sources":["/home/gzcharleszhang/projects/personal-site/src/countdown.jsx"],"sourcesContent":["import anime from \"animejs\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\n\nconst CountdownContainer = styled.div`\n  text-align: center;\n  color: ${props => props.theme.primary};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  -moz-transform: translateX(-50%) translateY(-50%);\n  -webkit-transform: translateX(-50%) translateY(-50%);\n  transform: translateX(-50%) translateY(-50%);\n  font-size: xx-large;\n`\n\nconst BigPoop = styled.div`\n  position: absolute;\n  font-size: 100px;\n`\n\nconst Poop = () => {\n  useEffect(() => {\n    anime\n      .timeline({\n        easing: \"easeInSine\"\n      })\n      .add({\n        targets: \".name\",\n        translateY: [\"-300px\", 0],\n        opacity: [0, 1],\n        duration: 500\n      })\n      .add({\n        targets: \".intro\",\n        translateY: [\"300px\", 0],\n        opacity: [0, 1],\n        duration: 500\n      })\n      .add({\n        targets: \".headshot\",\n        translateX: [\"300px\", 0],\n        opacity: [0, 1],\n        duration: 500\n      });\n  }, []);\n\n  return <BigPoop className=\"poop\">ðŸ’©</BigPoop>\n}\n\nconst Countdown = () => {\n  const targetTime = moment('20231204 07:00', 'YYYYMMDD hh:mm')\n  const [currTime, setCurrTime] = useState(moment())\n\n  useEffect(() => {\n    const interval = setInterval(() => setCurrTime(moment(), 1000))\n    return () => {\n      clearInterval(interval)\n    }\n  }, [])\n\n  useEffect(() => {\n    anime\n      .timeline({ loop: true })\n      .add({\n        targets: \".poop\",\n        scale: [1, 3],\n        duration: 500,\n        easing: \"easeOutElastic(1, .8)\"\n      })\n      .add({\n        targets: \".poop\",\n        scale: [3, 1],\n        duration: 500,\n        easing: \"easeOutElastic(1, .8)\"\n      });\n  }, []);\n\n  let diff = moment.duration(targetTime.diff(currTime))\n  const days = Math.floor(diff.asDays())\n  diff = diff.subtract(days, 'd')\n  const hours = Math.floor(diff.asHours())\n  diff = diff.subtract(hours, 'h')\n  const minutes = Math.floor(diff.asMinutes())\n  diff = diff.subtract(minutes, 'm')\n  const seconds = Math.floor(diff.asSeconds())\n\n  return <>\n    <Poop />\n    <CountdownContainer>\n      <div>Time left until I see my schmoop <span className=\"poop\">ðŸ’©</span></div>\n      <div>{days} days {hours} hours {minutes} minutes {seconds} seconds</div>\n    </CountdownContainer>\n  </>\n}\n\nexport default Countdown\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}